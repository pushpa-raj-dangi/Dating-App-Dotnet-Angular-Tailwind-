{"ast":null,"code":"import { BehaviorSubject, ReplaySubject, map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AccountService {\n  constructor(http) {\n    this.http = http;\n    this._isLoggedIn = new BehaviorSubject(false);\n    this.isLoggedIn$ = this._isLoggedIn.asObservable();\n    this.currentUserSource = new ReplaySubject(1);\n    this.currentUser$ = this.currentUserSource.asObservable();\n    this.login$ = user => this.http.post('https://localhost:5001/api/account/login', user).pipe(map(response => {\n      const user = response;\n      if (user) {\n        localStorage.setItem('user', JSON.stringify(user));\n        this.currentUserSource.next(user);\n        this._isLoggedIn.next(true);\n      }\n    }));\n  }\n  setCurrentUser(user) {\n    this.currentUserSource.next(user);\n  }\n  logout() {\n    localStorage.removeItem('user');\n    this.currentUserSource.next(null);\n  }\n}\nAccountService.ɵfac = function AccountService_Factory(t) {\n  return new (t || AccountService)(i0.ɵɵinject(i1.HttpClient));\n};\nAccountService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AccountService,\n  factory: AccountService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAIA,SAASA,eAAe,EAAEC,aAAa,EAAEC,GAAG,QAAQ,MAAM;;;AAK1D,OAAM,MAAOC,cAAc;EAOzBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IANhB,gBAAW,GAAG,IAAIL,eAAe,CAAU,KAAK,CAAC;IACzD,gBAAW,GAAG,IAAI,CAACM,WAAW,CAACC,YAAY,EAAE;IAErC,sBAAiB,GAAG,IAAIN,aAAa,CAAO,CAAC,CAAC;IACtD,iBAAY,GAAG,IAAI,CAACO,iBAAiB,CAACD,YAAY,EAAE;IAIpD,WAAM,GAAIE,IAAW,IACnB,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAC,0CAA0C,EAAED,IAAI,CAAC,CAACE,IAAI,CACnET,GAAG,CAAEU,QAAoB,IAAI;MAC3B,MAAMH,IAAI,GAAGG,QAAQ;MACrB,IAAIH,IAAI,EAAE;QACRI,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACP,IAAI,CAAC,CAAC;QAClD,IAAI,CAACD,iBAAiB,CAACS,IAAI,CAACR,IAAI,CAAC;QACjC,IAAI,CAACH,WAAW,CAACW,IAAI,CAAC,IAAI,CAAC;;IAE/B,CAAC,CAAC,CACH;EAZoC;EAcvCC,cAAc,CAACT,IAAU;IACvB,IAAI,CAACD,iBAAiB,CAACS,IAAI,CAACR,IAAI,CAAC;EACnC;EAEAU,MAAM;IACJN,YAAY,CAACO,UAAU,CAAC,MAAM,CAAC;IAC/B,IAAI,CAACZ,iBAAiB,CAACS,IAAI,CAAC,IAAI,CAAC;EACnC;;AA5BWd,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAkB,SAAdlB,cAAc;EAAAmB,YAFb;AAAM","names":["BehaviorSubject","ReplaySubject","map","AccountService","constructor","http","_isLoggedIn","asObservable","currentUserSource","user","post","pipe","response","localStorage","setItem","JSON","stringify","next","setCurrentUser","logout","removeItem","factory","providedIn"],"sourceRoot":"","sources":["E:\\dating-app\\client\\src\\app\\services\\account.service.ts"],"sourcesContent":["import { User } from 'src/app/components/account/models/user.interface';\r\nimport { Login } from 'src/app/components/account/models/login.interface';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, ReplaySubject, map } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AccountService {\r\n  private _isLoggedIn = new BehaviorSubject<boolean>(false);\r\n  isLoggedIn$ = this._isLoggedIn.asObservable();\r\n\r\n  private currentUserSource = new ReplaySubject<User>(1);\r\n  currentUser$ = this.currentUserSource.asObservable();\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  login$ = (user: Login) =>\r\n    this.http.post('https://localhost:5001/api/account/login', user).pipe(\r\n      map((response: User | any) => {\r\n        const user = response;\r\n        if (user) {\r\n          localStorage.setItem('user', JSON.stringify(user));\r\n          this.currentUserSource.next(user);\r\n          this._isLoggedIn.next(true);\r\n        }\r\n      })\r\n    );\r\n\r\n  setCurrentUser(user: User) {\r\n    this.currentUserSource.next(user);\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem('user');\r\n    this.currentUserSource.next(null);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}